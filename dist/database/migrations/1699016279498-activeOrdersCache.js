"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActiveOrdersCache1699016279498 = void 0;
class ActiveOrdersCache1699016279498 {
    constructor() {
        this.name = 'ActiveOrdersCache1699016279498';
    }
    up(queryRunner) {
        return __awaiter(this, void 0, void 0, function* () {
            yield queryRunner.query(`DELETE FROM "typeorm_metadata" WHERE "type" = $1 AND "name" = $2 AND "schema" = $3`, ['VIEW', 'items_view', 'public']);
            yield queryRunner.query(`DROP VIEW "items_view"`);
            yield queryRunner.query(`DELETE FROM "typeorm_metadata" WHERE "type" = $1 AND "name" = $2 AND "schema" = $3`, ['VIEW', 'collections_view', 'public']);
            yield queryRunner.query(`DROP VIEW "collections_view"`);
            yield queryRunner.query(`DELETE FROM "typeorm_metadata" WHERE "type" = $1 AND "name" = $2 AND "schema" = $3`, ['MATERIALIZED_VIEW', 'collection_rankings', 'public']);
            yield queryRunner.query(`DROP MATERIALIZED VIEW "collection_rankings"`);
            yield queryRunner.query(`DELETE FROM "typeorm_metadata" WHERE "type" = $1 AND "name" = $2 AND "schema" = $3`, ['VIEW', 'orders_view', 'public']);
            yield queryRunner.query(`DROP VIEW "orders_view"`);
            yield queryRunner.query(`CREATE UNIQUE INDEX "IDX_c84aeceb104a1a0f0e923e1ab1" ON "hidden_items" ("userAddress", "collectionAddress", "tokenId") `);
            yield queryRunner.query(`CREATE MATERIALIZED VIEW "active_orders_cache" AS SELECT "order"."hash" AS "hash", "order"."userAddress" AS "userAddress", "order"."collectionAddress" AS "collectionAddress", "order"."tokenId" AS "tokenId", "order"."type" AS "type", "order"."marketplace" AS "marketplace", "order"."price" AS "price", "order"."startingPrice" AS "startingPrice", "order"."currency" AS "currency", "order"."startTime" AS "startTime", "order"."endTime" AS "endTime", "order"."counter" AS "counter", "order"."signature" AS "signature", "order"."cancelTxHash" AS "cancelTxHash", "order"."cancelLogIdx" AS "cancelLogIdx", "order"."cancelTimestamp" AS "cancelTimestamp", "order"."royalties" AS "royalties", "order"."startingRoyalties" AS "startingRoyalties" FROM "orders" "order" LEFT JOIN (SELECT * FROM "token_balances" "tokenBalance" WHERE "tokenBalance"."balance" > 0) "tokenBalance" ON "tokenBalance"."currency" = "order"."currency" AND "tokenBalance"."userAddress" = "order"."userAddress"  LEFT JOIN (SELECT * FROM "balances" "balance" WHERE "balance"."balance" > 0) "balance" ON "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."userAddress" = "order"."userAddress" WHERE "order"."startTime" <= NOW() AND ("order"."endTime" > NOW() OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT 1 FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND CASE "order"."type" WHEN 'BID' THEN COALESCE("tokenBalance"."balance", 0) >= "order"."price" ELSE COALESCE("balance"."balance", 0) > 0 END`);
            yield queryRunner.query(`INSERT INTO "typeorm_metadata"("database", "schema", "table", "type", "name", "value") VALUES (DEFAULT, $1, DEFAULT, $2, $3, $4)`, [
                'public',
                'MATERIALIZED_VIEW',
                'active_orders_cache',
                'SELECT "order"."hash" AS "hash", "order"."userAddress" AS "userAddress", "order"."collectionAddress" AS "collectionAddress", "order"."tokenId" AS "tokenId", "order"."type" AS "type", "order"."marketplace" AS "marketplace", "order"."price" AS "price", "order"."startingPrice" AS "startingPrice", "order"."currency" AS "currency", "order"."startTime" AS "startTime", "order"."endTime" AS "endTime", "order"."counter" AS "counter", "order"."signature" AS "signature", "order"."cancelTxHash" AS "cancelTxHash", "order"."cancelLogIdx" AS "cancelLogIdx", "order"."cancelTimestamp" AS "cancelTimestamp", "order"."royalties" AS "royalties", "order"."startingRoyalties" AS "startingRoyalties" FROM "orders" "order" LEFT JOIN (SELECT * FROM "token_balances" "tokenBalance" WHERE "tokenBalance"."balance" > 0) "tokenBalance" ON "tokenBalance"."currency" = "order"."currency" AND "tokenBalance"."userAddress" = "order"."userAddress"  LEFT JOIN (SELECT * FROM "balances" "balance" WHERE "balance"."balance" > 0) "balance" ON "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."userAddress" = "order"."userAddress" WHERE "order"."startTime" <= NOW() AND ("order"."endTime" > NOW() OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT 1 FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND CASE "order"."type" WHEN \'BID\' THEN COALESCE("tokenBalance"."balance", 0) >= "order"."price" ELSE COALESCE("balance"."balance", 0) > 0 END',
            ]);
            yield queryRunner.query(`CREATE VIEW "orders_view" AS SELECT "order"."hash" AS "hash", "order"."userAddress" AS "userAddress", "order"."collectionAddress" AS "collectionAddress", "order"."tokenId" AS "tokenId", "order"."type" AS "type", "order"."marketplace" AS "marketplace", "order"."price" AS "price", "order"."startingPrice" AS "startingPrice", "order"."currency" AS "currency", "order"."startTime" AS "startTime", "order"."endTime" AS "endTime", "order"."counter" AS "counter", "order"."signature" AS "signature", "order"."cancelTxHash" AS "cancelTxHash", "order"."cancelLogIdx" AS "cancelLogIdx", "order"."cancelTimestamp" AS "cancelTimestamp", "order"."royalties" AS "royalties", "order"."startingRoyalties" AS "startingRoyalties", (SELECT EXISTS (SELECT 1 FROM "active_orders_cache" "active" WHERE "active"."hash" = "order"."hash") FROM (SELECT 1 AS dummy_column) "dummy_table") AS "active" FROM "orders" "order"`);
            yield queryRunner.query(`INSERT INTO "typeorm_metadata"("database", "schema", "table", "type", "name", "value") VALUES (DEFAULT, $1, DEFAULT, $2, $3, $4)`, [
                'public',
                'VIEW',
                'orders_view',
                'SELECT "order"."hash" AS "hash", "order"."userAddress" AS "userAddress", "order"."collectionAddress" AS "collectionAddress", "order"."tokenId" AS "tokenId", "order"."type" AS "type", "order"."marketplace" AS "marketplace", "order"."price" AS "price", "order"."startingPrice" AS "startingPrice", "order"."currency" AS "currency", "order"."startTime" AS "startTime", "order"."endTime" AS "endTime", "order"."counter" AS "counter", "order"."signature" AS "signature", "order"."cancelTxHash" AS "cancelTxHash", "order"."cancelLogIdx" AS "cancelLogIdx", "order"."cancelTimestamp" AS "cancelTimestamp", "order"."royalties" AS "royalties", "order"."startingRoyalties" AS "startingRoyalties", (SELECT EXISTS (SELECT 1 FROM "active_orders_cache" "active" WHERE "active"."hash" = "order"."hash") FROM (SELECT 1 AS dummy_column) "dummy_table") AS "active" FROM "orders" "order"',
            ]);
            yield queryRunner.query(`CREATE MATERIALIZED VIEW "collection_rankings_cache" AS SELECT "collection"."address" AS "address", "collection"."volume" AS "volume", "collection"."volume1h" AS "volume1h", "collection"."volume6h" AS "volume6h", "collection"."volume24h" AS "volume24h", "collection"."volume7d" AS "volume7d", "collection"."volume30d" AS "volume30d", "collection"."volume1h" - "collection"."volumePrevious1h" AS "volumeChange1h", "collection"."volume6h" - "collection"."volumePrevious6h" AS "volumeChange6h", "collection"."volume24h" - "collection"."volumePrevious24h" AS "volumeChange24h", "collection"."volume7d" - "collection"."volumePrevious7d" AS "volumeChange7d", "collection"."volume30d" - "collection"."volumePrevious30d" AS "volumeChange30d", "collection"."floorPrice" AS "floorPrice", "collection"."floorPrice" - "collection"."floorPrevious1h" AS "floorChange1h", "collection"."floorPrice" - "collection"."floorPrevious6h" AS "floorChange6h", "collection"."floorPrice" - "collection"."floorPrevious24h" AS "floorChange24h", "collection"."floorPrice" - "collection"."floorPrevious7d" AS "floorChange7d", "collection"."floorPrice" - "collection"."floorPrevious30d" AS "floorChange30d", "collection"."saleCount" AS "saleCount", "collection"."saleCount1h" AS "saleCount1h", "collection"."saleCount6h" AS "saleCount6h", "collection"."saleCount24h" AS "saleCount24h", "collection"."saleCount7d" AS "saleCount7d", "collection"."saleCount30d" AS "saleCount30d", "collection"."totalSupply" AS "totalSupply", "collection"."ownerCount" AS "ownerCount", "collection"."listedCount" AS "listedCount" FROM (SELECT "collection"."address" AS "address", (SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6')) AS "volume", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - INTERVAL '1 hour'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volume1h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - INTERVAL '6 hours'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volume6h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - INTERVAL '1 day'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volume24h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - INTERVAL '7 days'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volume7d", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - INTERVAL '30 days'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volume30d", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - (INTERVAL '1 hour' * 2) AND "sale"."timestamp" <= NOW() - INTERVAL '1 hour'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volumePrevious1h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - (INTERVAL '6 hours' * 2) AND "sale"."timestamp" <= NOW() - INTERVAL '6 hours'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volumePrevious6h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - (INTERVAL '1 day' * 2) AND "sale"."timestamp" <= NOW() - INTERVAL '1 day'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volumePrevious24h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - (INTERVAL '7 days' * 2) AND "sale"."timestamp" <= NOW() - INTERVAL '7 days'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volumePrevious7d", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - (INTERVAL '30 days' * 2) AND "sale"."timestamp" <= NOW() - INTERVAL '30 days'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volumePrevious30d", (SELECT MIN(CASE WHEN "order"."type" = 'DUTCH_AUCTION' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN ('ASK', 'DUTCH_AUCTION') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "order"."active") AS "floorPrice", (SELECT MIN(CASE WHEN "order"."type" = 'DUTCH_AUCTION' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - INTERVAL '1 hour' - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN ('ASK', 'DUTCH_AUCTION') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "order"."startTime" <= NOW() - INTERVAL '1 hour' AND ("order"."endTime" > NOW() - INTERVAL '1 hour' OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT * FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND "order"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND EXISTS ((SELECT 1 FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0))) AS "floorPrevious1h", (SELECT MIN(CASE WHEN "order"."type" = 'DUTCH_AUCTION' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - INTERVAL '6 hours' - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN ('ASK', 'DUTCH_AUCTION') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "order"."startTime" <= NOW() - INTERVAL '6 hours' AND ("order"."endTime" > NOW() - INTERVAL '6 hours' OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT * FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND "order"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND EXISTS ((SELECT 1 FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0))) AS "floorPrevious6h", (SELECT MIN(CASE WHEN "order"."type" = 'DUTCH_AUCTION' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day' - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN ('ASK', 'DUTCH_AUCTION') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "order"."startTime" <= NOW() - INTERVAL '1 day' AND ("order"."endTime" > NOW() - INTERVAL '1 day' OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT * FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND "order"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND EXISTS ((SELECT 1 FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0))) AS "floorPrevious24h", (SELECT MIN(CASE WHEN "order"."type" = 'DUTCH_AUCTION' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - INTERVAL '7 days' - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN ('ASK', 'DUTCH_AUCTION') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "order"."startTime" <= NOW() - INTERVAL '7 days' AND ("order"."endTime" > NOW() - INTERVAL '7 days' OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT * FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND "order"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND EXISTS ((SELECT 1 FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0))) AS "floorPrevious7d", (SELECT MIN(CASE WHEN "order"."type" = 'DUTCH_AUCTION' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - INTERVAL '30 days' - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN ('ASK', 'DUTCH_AUCTION') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "order"."startTime" <= NOW() - INTERVAL '30 days' AND ("order"."endTime" > NOW() - INTERVAL '30 days' OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT * FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND "order"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND EXISTS ((SELECT 1 FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0))) AS "floorPrevious30d", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6')) AS "saleCount", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - INTERVAL '1 hour') AS "saleCount1h", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - INTERVAL '6 hours') AS "saleCount6h", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - INTERVAL '1 day') AS "saleCount24h", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - INTERVAL '7 days') AS "saleCount7d", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - INTERVAL '30 days') AS "saleCount30d", (SELECT SUM("balance"."balance") FROM "balances" "balance" WHERE "balance"."collectionAddress" = "collection"."address" AND "balance"."balance" > 0) AS "totalSupply", (SELECT COUNT(DISTINCT "balance"."userAddress") FROM "balances" "balance" WHERE "balance"."collectionAddress" = "collection"."address" AND "balance"."balance" > 0) AS "ownerCount", (SELECT COUNT(DISTINCT "order"."tokenId") FROM "active_orders_cache" "order" WHERE "order"."type" != 'BID' AND "order"."collectionAddress" = "collection"."address") AS "listedCount" FROM "collections" "collection") "collection"`);
            yield queryRunner.query(`INSERT INTO "typeorm_metadata"("database", "schema", "table", "type", "name", "value") VALUES (DEFAULT, $1, DEFAULT, $2, $3, $4)`, [
                'public',
                'MATERIALIZED_VIEW',
                'collection_rankings_cache',
                'SELECT "collection"."address" AS "address", "collection"."volume" AS "volume", "collection"."volume1h" AS "volume1h", "collection"."volume6h" AS "volume6h", "collection"."volume24h" AS "volume24h", "collection"."volume7d" AS "volume7d", "collection"."volume30d" AS "volume30d", "collection"."volume1h" - "collection"."volumePrevious1h" AS "volumeChange1h", "collection"."volume6h" - "collection"."volumePrevious6h" AS "volumeChange6h", "collection"."volume24h" - "collection"."volumePrevious24h" AS "volumeChange24h", "collection"."volume7d" - "collection"."volumePrevious7d" AS "volumeChange7d", "collection"."volume30d" - "collection"."volumePrevious30d" AS "volumeChange30d", "collection"."floorPrice" AS "floorPrice", "collection"."floorPrice" - "collection"."floorPrevious1h" AS "floorChange1h", "collection"."floorPrice" - "collection"."floorPrevious6h" AS "floorChange6h", "collection"."floorPrice" - "collection"."floorPrevious24h" AS "floorChange24h", "collection"."floorPrice" - "collection"."floorPrevious7d" AS "floorChange7d", "collection"."floorPrice" - "collection"."floorPrevious30d" AS "floorChange30d", "collection"."saleCount" AS "saleCount", "collection"."saleCount1h" AS "saleCount1h", "collection"."saleCount6h" AS "saleCount6h", "collection"."saleCount24h" AS "saleCount24h", "collection"."saleCount7d" AS "saleCount7d", "collection"."saleCount30d" AS "saleCount30d", "collection"."totalSupply" AS "totalSupply", "collection"."ownerCount" AS "ownerCount", "collection"."listedCount" AS "listedCount" FROM (SELECT "collection"."address" AS "address", (SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\')) AS "volume", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - INTERVAL \'1 hour\'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volume1h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - INTERVAL \'6 hours\'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volume6h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - INTERVAL \'1 day\'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volume24h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - INTERVAL \'7 days\'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volume7d", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - INTERVAL \'30 days\'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volume30d", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - (INTERVAL \'1 hour\' * 2) AND "sale"."timestamp" <= NOW() - INTERVAL \'1 hour\'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volumePrevious1h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - (INTERVAL \'6 hours\' * 2) AND "sale"."timestamp" <= NOW() - INTERVAL \'6 hours\'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volumePrevious6h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - (INTERVAL \'1 day\' * 2) AND "sale"."timestamp" <= NOW() - INTERVAL \'1 day\'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volumePrevious24h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - (INTERVAL \'7 days\' * 2) AND "sale"."timestamp" <= NOW() - INTERVAL \'7 days\'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volumePrevious7d", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - (INTERVAL \'30 days\' * 2) AND "sale"."timestamp" <= NOW() - INTERVAL \'30 days\'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volumePrevious30d", (SELECT MIN(CASE WHEN "order"."type" = \'DUTCH_AUCTION\' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN (\'ASK\', \'DUTCH_AUCTION\') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "order"."active") AS "floorPrice", (SELECT MIN(CASE WHEN "order"."type" = \'DUTCH_AUCTION\' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - INTERVAL \'1 hour\' - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN (\'ASK\', \'DUTCH_AUCTION\') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "order"."startTime" <= NOW() - INTERVAL \'1 hour\' AND ("order"."endTime" > NOW() - INTERVAL \'1 hour\' OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT * FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND "order"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND EXISTS ((SELECT 1 FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0))) AS "floorPrevious1h", (SELECT MIN(CASE WHEN "order"."type" = \'DUTCH_AUCTION\' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - INTERVAL \'6 hours\' - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN (\'ASK\', \'DUTCH_AUCTION\') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "order"."startTime" <= NOW() - INTERVAL \'6 hours\' AND ("order"."endTime" > NOW() - INTERVAL \'6 hours\' OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT * FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND "order"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND EXISTS ((SELECT 1 FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0))) AS "floorPrevious6h", (SELECT MIN(CASE WHEN "order"."type" = \'DUTCH_AUCTION\' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - INTERVAL \'1 day\' - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN (\'ASK\', \'DUTCH_AUCTION\') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "order"."startTime" <= NOW() - INTERVAL \'1 day\' AND ("order"."endTime" > NOW() - INTERVAL \'1 day\' OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT * FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND "order"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND EXISTS ((SELECT 1 FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0))) AS "floorPrevious24h", (SELECT MIN(CASE WHEN "order"."type" = \'DUTCH_AUCTION\' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - INTERVAL \'7 days\' - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN (\'ASK\', \'DUTCH_AUCTION\') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "order"."startTime" <= NOW() - INTERVAL \'7 days\' AND ("order"."endTime" > NOW() - INTERVAL \'7 days\' OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT * FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND "order"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND EXISTS ((SELECT 1 FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0))) AS "floorPrevious7d", (SELECT MIN(CASE WHEN "order"."type" = \'DUTCH_AUCTION\' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - INTERVAL \'30 days\' - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN (\'ASK\', \'DUTCH_AUCTION\') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "order"."startTime" <= NOW() - INTERVAL \'30 days\' AND ("order"."endTime" > NOW() - INTERVAL \'30 days\' OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT * FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND "order"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND EXISTS ((SELECT 1 FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0))) AS "floorPrevious30d", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\')) AS "saleCount", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - INTERVAL \'1 hour\') AS "saleCount1h", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - INTERVAL \'6 hours\') AS "saleCount6h", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - INTERVAL \'1 day\') AS "saleCount24h", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - INTERVAL \'7 days\') AS "saleCount7d", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - INTERVAL \'30 days\') AS "saleCount30d", (SELECT SUM("balance"."balance") FROM "balances" "balance" WHERE "balance"."collectionAddress" = "collection"."address" AND "balance"."balance" > 0) AS "totalSupply", (SELECT COUNT(DISTINCT "balance"."userAddress") FROM "balances" "balance" WHERE "balance"."collectionAddress" = "collection"."address" AND "balance"."balance" > 0) AS "ownerCount", (SELECT COUNT(DISTINCT "order"."tokenId") FROM "active_orders_cache" "order" WHERE "order"."type" != \'BID\' AND "order"."collectionAddress" = "collection"."address") AS "listedCount" FROM "collections" "collection") "collection"',
            ]);
            yield queryRunner.query(`CREATE VIEW "collections_view" AS SELECT "collection"."address" AS "address", "collection"."type" AS "type", "collection"."name" AS "name", "collection"."symbol" AS "symbol", "collection"."imageUrl" AS "imageUrl", "collection"."active" AS "active", "collection"."verified" AS "verified", "collection"."explicit" AS "explicit", "collection"."bannerUrl" AS "bannerUrl", "collection"."description" AS "description", "collection"."deployedAt" AS "deployedAt", "collection"."deployer" AS "deployer", "collection"."links" AS "links", "collection"."lastImport" AS "lastImport", COALESCE("ranking"."volume", 0) AS "volume", COALESCE("ranking"."volume1h", 0) AS "volume1h", COALESCE("ranking"."volume6h", 0) AS "volume6h", COALESCE("ranking"."volume24h", 0) AS "volume24h", COALESCE("ranking"."volume7d", 0) AS "volume7d", COALESCE("ranking"."volume30d", 0) AS "volume30d", COALESCE("ranking"."volumeChange1h", 0) AS "volumeChange1h", COALESCE("ranking"."volumeChange6h", 0) AS "volumeChange6h", COALESCE("ranking"."volumeChange24h", 0) AS "volumeChange24h", COALESCE("ranking"."volumeChange7d", 0) AS "volumeChange7d", COALESCE("ranking"."volumeChange30d", 0) AS "volumeChange30d", COALESCE("ranking"."floorPrice", 0) AS "floorPrice", COALESCE("ranking"."floorChange1h", 0) AS "floorChange1h", COALESCE("ranking"."floorChange6h", 0) AS "floorChange6h", COALESCE("ranking"."floorChange24h", 0) AS "floorChange24h", COALESCE("ranking"."floorChange7d", 0) AS "floorChange7d", COALESCE("ranking"."floorChange30d", 0) AS "floorChange30d", COALESCE("ranking"."saleCount", 0) AS "saleCount", COALESCE("ranking"."saleCount1h", 0) AS "saleCount1h", COALESCE("ranking"."saleCount6h", 0) AS "saleCount6h", COALESCE("ranking"."saleCount24h", 0) AS "saleCount24h", COALESCE("ranking"."saleCount7d", 0) AS "saleCount7d", COALESCE("ranking"."saleCount30d", 0) AS "saleCount30d", COALESCE("ranking"."totalSupply", 0) AS "totalSupply", COALESCE("ranking"."ownerCount", 0) AS "ownerCount", COALESCE("ranking"."listedCount", 0) AS "listedCount", (SELECT EXISTS (SELECT 1 FROM "notable_collections" "notable" WHERE "notable"."collectionAddress" = "collection"."address") FROM (SELECT 1 AS dummy_column) "dummy_table") AS "notable" FROM "collections" "collection" LEFT JOIN "collection_rankings_cache" "ranking" ON "ranking"."address" = "collection"."address"`);
            yield queryRunner.query(`INSERT INTO "typeorm_metadata"("database", "schema", "table", "type", "name", "value") VALUES (DEFAULT, $1, DEFAULT, $2, $3, $4)`, [
                'public',
                'VIEW',
                'collections_view',
                'SELECT "collection"."address" AS "address", "collection"."type" AS "type", "collection"."name" AS "name", "collection"."symbol" AS "symbol", "collection"."imageUrl" AS "imageUrl", "collection"."active" AS "active", "collection"."verified" AS "verified", "collection"."explicit" AS "explicit", "collection"."bannerUrl" AS "bannerUrl", "collection"."description" AS "description", "collection"."deployedAt" AS "deployedAt", "collection"."deployer" AS "deployer", "collection"."links" AS "links", "collection"."lastImport" AS "lastImport", COALESCE("ranking"."volume", 0) AS "volume", COALESCE("ranking"."volume1h", 0) AS "volume1h", COALESCE("ranking"."volume6h", 0) AS "volume6h", COALESCE("ranking"."volume24h", 0) AS "volume24h", COALESCE("ranking"."volume7d", 0) AS "volume7d", COALESCE("ranking"."volume30d", 0) AS "volume30d", COALESCE("ranking"."volumeChange1h", 0) AS "volumeChange1h", COALESCE("ranking"."volumeChange6h", 0) AS "volumeChange6h", COALESCE("ranking"."volumeChange24h", 0) AS "volumeChange24h", COALESCE("ranking"."volumeChange7d", 0) AS "volumeChange7d", COALESCE("ranking"."volumeChange30d", 0) AS "volumeChange30d", COALESCE("ranking"."floorPrice", 0) AS "floorPrice", COALESCE("ranking"."floorChange1h", 0) AS "floorChange1h", COALESCE("ranking"."floorChange6h", 0) AS "floorChange6h", COALESCE("ranking"."floorChange24h", 0) AS "floorChange24h", COALESCE("ranking"."floorChange7d", 0) AS "floorChange7d", COALESCE("ranking"."floorChange30d", 0) AS "floorChange30d", COALESCE("ranking"."saleCount", 0) AS "saleCount", COALESCE("ranking"."saleCount1h", 0) AS "saleCount1h", COALESCE("ranking"."saleCount6h", 0) AS "saleCount6h", COALESCE("ranking"."saleCount24h", 0) AS "saleCount24h", COALESCE("ranking"."saleCount7d", 0) AS "saleCount7d", COALESCE("ranking"."saleCount30d", 0) AS "saleCount30d", COALESCE("ranking"."totalSupply", 0) AS "totalSupply", COALESCE("ranking"."ownerCount", 0) AS "ownerCount", COALESCE("ranking"."listedCount", 0) AS "listedCount", (SELECT EXISTS (SELECT 1 FROM "notable_collections" "notable" WHERE "notable"."collectionAddress" = "collection"."address") FROM (SELECT 1 AS dummy_column) "dummy_table") AS "notable" FROM "collections" "collection" LEFT JOIN "collection_rankings_cache" "ranking" ON "ranking"."address" = "collection"."address"',
            ]);
            yield queryRunner.query(`CREATE VIEW "items_view" AS SELECT DISTINCT ON ("item"."collectionAddress", "item"."tokenId") "item"."collectionAddress" AS "collectionAddress", "item"."tokenId" AS "tokenId", "item"."title" AS "title", "item"."description" AS "description", "item"."tokenUri" AS "tokenUri", "item"."medias" AS "medias", "item"."rarityRanking" AS "rarityRanking", "item"."rarityScore" AS "rarityScore", "item"."lastImport" AS "lastImport", CASE WHEN "item"."rarityRanking" IS NOT NULL AND "collection"."totalSupply" > 0 THEN 10000 - "item"."rarityRanking" * 10000 / "collection"."totalSupply" ELSE NULL END AS "rarityBasisPoints", CASE WHEN "buyNow"."type" = 'DUTCH_AUCTION' THEN "buyNow"."startingPrice" - ("buyNow"."startingPrice" - "buyNow"."price") * EXTRACT(EPOCH FROM NOW() - "buyNow"."startTime") / EXTRACT(EPOCH FROM "buyNow"."endTime" - "buyNow"."startTime") ELSE "buyNow"."price" END AS "buyNowPrice", "buyNow"."startTime" AS "buyNowStartTime", "sellNow"."price" AS "sellNowPrice", "sellNow"."startTime" AS "sellNowStartTime", CASE WHEN "auction"."hash" IS NOT NULL THEN GREATEST("sellNow"."price", "auction"."price") ELSE NULL END AS "auctionPrice", "auction"."endTime" AS "auctionEndTime", "lastSale"."price" AS "lastSalePrice", "lastSale"."timestamp" AS "lastSaleTimestamp", "mint"."timestamp" AS "mintTimestamp", "lastTransfer"."timestamp" AS "lastTransferTimestamp", (SELECT COUNT(*) FROM "likes" "like" WHERE "like"."collectionAddress" = "item"."collectionAddress" AND "like"."tokenId" = "item"."tokenId") AS "likeCount" FROM "items" "item" LEFT JOIN "collection_rankings_cache" "collection" ON "collection"."address" = "item"."collectionAddress"  LEFT JOIN (SELECT DISTINCT ON ("order"."collectionAddress", "order"."tokenId") * FROM "active_orders_cache" "order" WHERE "order"."type" IN ('ASK', 'DUTCH_AUCTION') AND "order"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') ORDER BY "order"."collectionAddress" ASC, "order"."tokenId" ASC, CASE WHEN "order"."type" = 'DUTCH_AUCTION' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END ASC) "buyNow" ON "buyNow"."collectionAddress" = "item"."collectionAddress" AND "buyNow"."tokenId" = "item"."tokenId"  LEFT JOIN (SELECT DISTINCT ON ("order"."collectionAddress", "order"."tokenId") * FROM "active_orders_cache" "order" WHERE "order"."type" = 'BID' AND "order"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') ORDER BY "order"."collectionAddress" ASC, "order"."tokenId" ASC, "order"."price" DESC) "sellNow" ON "sellNow"."collectionAddress" = "item"."collectionAddress" AND ("sellNow"."tokenId" = "item"."tokenId" OR "sellNow"."tokenId" IS NULL)  LEFT JOIN (SELECT DISTINCT ON ("order"."collectionAddress", "order"."tokenId") * FROM "active_orders_cache" "order" WHERE "order"."type" = 'ENGLISH_AUCTION' AND "order"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') ORDER BY "order"."collectionAddress" ASC, "order"."tokenId" ASC, "order"."endTime" ASC) "auction" ON "auction"."collectionAddress" = "item"."collectionAddress" AND "auction"."tokenId" = "item"."tokenId"  LEFT JOIN (SELECT DISTINCT ON ("sale"."collectionAddress", "sale"."tokenId") * FROM "sales_view" "sale" ORDER BY "sale"."collectionAddress" ASC, "sale"."tokenId" ASC, "timestamp" DESC) "lastSale" ON "lastSale"."collectionAddress" = "item"."collectionAddress" AND "lastSale"."tokenId" = "item"."tokenId"  LEFT JOIN (SELECT DISTINCT ON ("transfer"."collectionAddress", "transfer"."tokenId") * FROM "transfers_view" "transfer" ORDER BY "transfer"."collectionAddress" ASC, "transfer"."tokenId" ASC, "timestamp" ASC) "mint" ON "mint"."collectionAddress" = "item"."collectionAddress" AND "mint"."tokenId" = "item"."tokenId"  LEFT JOIN (SELECT DISTINCT ON ("transfer"."collectionAddress", "transfer"."tokenId") * FROM "transfers_view" "transfer" ORDER BY "transfer"."collectionAddress" ASC, "transfer"."tokenId" ASC, "timestamp" DESC) "lastTransfer" ON "lastTransfer"."collectionAddress" = "item"."collectionAddress" AND "lastTransfer"."tokenId" = "item"."tokenId" ORDER BY "item"."collectionAddress" ASC, "item"."tokenId" ASC, "sellNow"."price" DESC`);
            yield queryRunner.query(`INSERT INTO "typeorm_metadata"("database", "schema", "table", "type", "name", "value") VALUES (DEFAULT, $1, DEFAULT, $2, $3, $4)`, [
                'public',
                'VIEW',
                'items_view',
                'SELECT DISTINCT ON ("item"."collectionAddress", "item"."tokenId") "item"."collectionAddress" AS "collectionAddress", "item"."tokenId" AS "tokenId", "item"."title" AS "title", "item"."description" AS "description", "item"."tokenUri" AS "tokenUri", "item"."medias" AS "medias", "item"."rarityRanking" AS "rarityRanking", "item"."rarityScore" AS "rarityScore", "item"."lastImport" AS "lastImport", CASE WHEN "item"."rarityRanking" IS NOT NULL AND "collection"."totalSupply" > 0 THEN 10000 - "item"."rarityRanking" * 10000 / "collection"."totalSupply" ELSE NULL END AS "rarityBasisPoints", CASE WHEN "buyNow"."type" = \'DUTCH_AUCTION\' THEN "buyNow"."startingPrice" - ("buyNow"."startingPrice" - "buyNow"."price") * EXTRACT(EPOCH FROM NOW() - "buyNow"."startTime") / EXTRACT(EPOCH FROM "buyNow"."endTime" - "buyNow"."startTime") ELSE "buyNow"."price" END AS "buyNowPrice", "buyNow"."startTime" AS "buyNowStartTime", "sellNow"."price" AS "sellNowPrice", "sellNow"."startTime" AS "sellNowStartTime", CASE WHEN "auction"."hash" IS NOT NULL THEN GREATEST("sellNow"."price", "auction"."price") ELSE NULL END AS "auctionPrice", "auction"."endTime" AS "auctionEndTime", "lastSale"."price" AS "lastSalePrice", "lastSale"."timestamp" AS "lastSaleTimestamp", "mint"."timestamp" AS "mintTimestamp", "lastTransfer"."timestamp" AS "lastTransferTimestamp", (SELECT COUNT(*) FROM "likes" "like" WHERE "like"."collectionAddress" = "item"."collectionAddress" AND "like"."tokenId" = "item"."tokenId") AS "likeCount" FROM "items" "item" LEFT JOIN "collection_rankings_cache" "collection" ON "collection"."address" = "item"."collectionAddress"  LEFT JOIN (SELECT DISTINCT ON ("order"."collectionAddress", "order"."tokenId") * FROM "active_orders_cache" "order" WHERE "order"."type" IN (\'ASK\', \'DUTCH_AUCTION\') AND "order"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') ORDER BY "order"."collectionAddress" ASC, "order"."tokenId" ASC, CASE WHEN "order"."type" = \'DUTCH_AUCTION\' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END ASC) "buyNow" ON "buyNow"."collectionAddress" = "item"."collectionAddress" AND "buyNow"."tokenId" = "item"."tokenId"  LEFT JOIN (SELECT DISTINCT ON ("order"."collectionAddress", "order"."tokenId") * FROM "active_orders_cache" "order" WHERE "order"."type" = \'BID\' AND "order"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') ORDER BY "order"."collectionAddress" ASC, "order"."tokenId" ASC, "order"."price" DESC) "sellNow" ON "sellNow"."collectionAddress" = "item"."collectionAddress" AND ("sellNow"."tokenId" = "item"."tokenId" OR "sellNow"."tokenId" IS NULL)  LEFT JOIN (SELECT DISTINCT ON ("order"."collectionAddress", "order"."tokenId") * FROM "active_orders_cache" "order" WHERE "order"."type" = \'ENGLISH_AUCTION\' AND "order"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') ORDER BY "order"."collectionAddress" ASC, "order"."tokenId" ASC, "order"."endTime" ASC) "auction" ON "auction"."collectionAddress" = "item"."collectionAddress" AND "auction"."tokenId" = "item"."tokenId"  LEFT JOIN (SELECT DISTINCT ON ("sale"."collectionAddress", "sale"."tokenId") * FROM "sales_view" "sale" ORDER BY "sale"."collectionAddress" ASC, "sale"."tokenId" ASC, "timestamp" DESC) "lastSale" ON "lastSale"."collectionAddress" = "item"."collectionAddress" AND "lastSale"."tokenId" = "item"."tokenId"  LEFT JOIN (SELECT DISTINCT ON ("transfer"."collectionAddress", "transfer"."tokenId") * FROM "transfers_view" "transfer" ORDER BY "transfer"."collectionAddress" ASC, "transfer"."tokenId" ASC, "timestamp" ASC) "mint" ON "mint"."collectionAddress" = "item"."collectionAddress" AND "mint"."tokenId" = "item"."tokenId"  LEFT JOIN (SELECT DISTINCT ON ("transfer"."collectionAddress", "transfer"."tokenId") * FROM "transfers_view" "transfer" ORDER BY "transfer"."collectionAddress" ASC, "transfer"."tokenId" ASC, "timestamp" DESC) "lastTransfer" ON "lastTransfer"."collectionAddress" = "item"."collectionAddress" AND "lastTransfer"."tokenId" = "item"."tokenId" ORDER BY "item"."collectionAddress" ASC, "item"."tokenId" ASC, "sellNow"."price" DESC',
            ]);
            yield queryRunner.query(`CREATE INDEX "IDX_fcaa362b8c3937d1f5cc805d3f" ON "collection_rankings_cache" ("floorChange30d") `);
            yield queryRunner.query(`CREATE INDEX "IDX_fe2a8f3193a24cccffc60e2424" ON "collection_rankings_cache" ("floorChange7d") `);
            yield queryRunner.query(`CREATE INDEX "IDX_fbbfbed476454117e04530c07a" ON "collection_rankings_cache" ("floorChange24h") `);
            yield queryRunner.query(`CREATE INDEX "IDX_8ce5c053e2239185f30c8d884c" ON "collection_rankings_cache" ("floorChange6h") `);
            yield queryRunner.query(`CREATE INDEX "IDX_28ed632162f3d5b1ba5f371ef1" ON "collection_rankings_cache" ("floorChange1h") `);
            yield queryRunner.query(`CREATE INDEX "IDX_ca00a94c02dba69e5605367472" ON "collection_rankings_cache" ("floorPrice") `);
            yield queryRunner.query(`CREATE INDEX "IDX_bb3558573beb8700497d6557b8" ON "collection_rankings_cache" ("volumeChange30d") `);
            yield queryRunner.query(`CREATE INDEX "IDX_f80d0a592738250c9c76141b1a" ON "collection_rankings_cache" ("volumeChange7d") `);
            yield queryRunner.query(`CREATE INDEX "IDX_7d286aefb0d7871f95ef66a43a" ON "collection_rankings_cache" ("volumeChange24h") `);
            yield queryRunner.query(`CREATE INDEX "IDX_59f8f95e453f49b6ef256e9773" ON "collection_rankings_cache" ("volumeChange6h") `);
            yield queryRunner.query(`CREATE INDEX "IDX_ea0c7f6f87a3693ed54440ce19" ON "collection_rankings_cache" ("volumeChange1h") `);
            yield queryRunner.query(`CREATE INDEX "IDX_e33af69bf81bef914cf9758a12" ON "collection_rankings_cache" ("volume30d") `);
            yield queryRunner.query(`CREATE INDEX "IDX_404b0993f307ab4ecc1eb240cb" ON "collection_rankings_cache" ("volume7d") `);
            yield queryRunner.query(`CREATE INDEX "IDX_22bc22d06378750c6891970cfa" ON "collection_rankings_cache" ("volume24h") `);
            yield queryRunner.query(`CREATE INDEX "IDX_508017d641b5f3f0b89cc84d0a" ON "collection_rankings_cache" ("volume6h") `);
            yield queryRunner.query(`CREATE INDEX "IDX_5b8893e59fda1cee1b2508e1d1" ON "collection_rankings_cache" ("volume1h") `);
            yield queryRunner.query(`CREATE INDEX "IDX_f8aa2834ec0fbeee533eebc1ea" ON "collection_rankings_cache" ("volume") `);
            yield queryRunner.query(`CREATE UNIQUE INDEX "IDX_372f08cce6315ff748f0605db6" ON "collection_rankings_cache" ("address") `);
            yield queryRunner.query(`CREATE UNIQUE INDEX "IDX_4930cae8caee19b4544501c236" ON "active_orders_cache" ("hash") `);
        });
    }
    down(queryRunner) {
        return __awaiter(this, void 0, void 0, function* () {
            yield queryRunner.query(`DROP INDEX "public"."IDX_4930cae8caee19b4544501c236"`);
            yield queryRunner.query(`DROP INDEX "public"."IDX_372f08cce6315ff748f0605db6"`);
            yield queryRunner.query(`DROP INDEX "public"."IDX_f8aa2834ec0fbeee533eebc1ea"`);
            yield queryRunner.query(`DROP INDEX "public"."IDX_5b8893e59fda1cee1b2508e1d1"`);
            yield queryRunner.query(`DROP INDEX "public"."IDX_508017d641b5f3f0b89cc84d0a"`);
            yield queryRunner.query(`DROP INDEX "public"."IDX_22bc22d06378750c6891970cfa"`);
            yield queryRunner.query(`DROP INDEX "public"."IDX_404b0993f307ab4ecc1eb240cb"`);
            yield queryRunner.query(`DROP INDEX "public"."IDX_e33af69bf81bef914cf9758a12"`);
            yield queryRunner.query(`DROP INDEX "public"."IDX_ea0c7f6f87a3693ed54440ce19"`);
            yield queryRunner.query(`DROP INDEX "public"."IDX_59f8f95e453f49b6ef256e9773"`);
            yield queryRunner.query(`DROP INDEX "public"."IDX_7d286aefb0d7871f95ef66a43a"`);
            yield queryRunner.query(`DROP INDEX "public"."IDX_f80d0a592738250c9c76141b1a"`);
            yield queryRunner.query(`DROP INDEX "public"."IDX_bb3558573beb8700497d6557b8"`);
            yield queryRunner.query(`DROP INDEX "public"."IDX_ca00a94c02dba69e5605367472"`);
            yield queryRunner.query(`DROP INDEX "public"."IDX_28ed632162f3d5b1ba5f371ef1"`);
            yield queryRunner.query(`DROP INDEX "public"."IDX_8ce5c053e2239185f30c8d884c"`);
            yield queryRunner.query(`DROP INDEX "public"."IDX_fbbfbed476454117e04530c07a"`);
            yield queryRunner.query(`DROP INDEX "public"."IDX_fe2a8f3193a24cccffc60e2424"`);
            yield queryRunner.query(`DROP INDEX "public"."IDX_fcaa362b8c3937d1f5cc805d3f"`);
            yield queryRunner.query(`DELETE FROM "typeorm_metadata" WHERE "type" = $1 AND "name" = $2 AND "schema" = $3`, ['VIEW', 'items_view', 'public']);
            yield queryRunner.query(`DROP VIEW "items_view"`);
            yield queryRunner.query(`DELETE FROM "typeorm_metadata" WHERE "type" = $1 AND "name" = $2 AND "schema" = $3`, ['VIEW', 'collections_view', 'public']);
            yield queryRunner.query(`DROP VIEW "collections_view"`);
            yield queryRunner.query(`DELETE FROM "typeorm_metadata" WHERE "type" = $1 AND "name" = $2 AND "schema" = $3`, ['MATERIALIZED_VIEW', 'collection_rankings_cache', 'public']);
            yield queryRunner.query(`DROP MATERIALIZED VIEW "collection_rankings_cache"`);
            yield queryRunner.query(`DELETE FROM "typeorm_metadata" WHERE "type" = $1 AND "name" = $2 AND "schema" = $3`, ['VIEW', 'orders_view', 'public']);
            yield queryRunner.query(`DROP VIEW "orders_view"`);
            yield queryRunner.query(`DELETE FROM "typeorm_metadata" WHERE "type" = $1 AND "name" = $2 AND "schema" = $3`, ['MATERIALIZED_VIEW', 'active_orders_cache', 'public']);
            yield queryRunner.query(`DROP MATERIALIZED VIEW "active_orders_cache"`);
            yield queryRunner.query(`DROP INDEX "public"."IDX_c84aeceb104a1a0f0e923e1ab1"`);
            yield queryRunner.query(`CREATE VIEW "orders_view" AS SELECT "order"."hash" AS "hash", "order"."userAddress" AS "userAddress", "order"."collectionAddress" AS "collectionAddress", "order"."tokenId" AS "tokenId", "order"."type" AS "type", "order"."marketplace" AS "marketplace", "order"."price" AS "price", "order"."startingPrice" AS "startingPrice", "order"."currency" AS "currency", "order"."startTime" AS "startTime", "order"."endTime" AS "endTime", "order"."counter" AS "counter", "order"."signature" AS "signature", "order"."cancelTxHash" AS "cancelTxHash", "order"."cancelLogIdx" AS "cancelLogIdx", "order"."cancelTimestamp" AS "cancelTimestamp", "order"."royalties" AS "royalties", "order"."startingRoyalties" AS "startingRoyalties", (SELECT "order"."startTime" <= NOW() AND ("order"."endTime" > NOW() OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT 1 FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND CASE "order"."type" WHEN 'BID' THEN COALESCE((SELECT "balance"."balance" FROM "token_balances" "balance" WHERE "balance"."currency" = "order"."currency" AND "balance"."userAddress" = "order"."userAddress" AND "balance"."balance" > 0), 0) >= "order"."price" ELSE COALESCE((SELECT "balance"."balance" FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0), 0) > 0 END FROM (SELECT 1 AS dummy_column) "dummy_table") AS "active" FROM "orders" "order"`);
            yield queryRunner.query(`INSERT INTO "typeorm_metadata"("database", "schema", "table", "type", "name", "value") VALUES (DEFAULT, $1, DEFAULT, $2, $3, $4)`, [
                'public',
                'VIEW',
                'orders_view',
                'SELECT "order"."hash" AS "hash", "order"."userAddress" AS "userAddress", "order"."collectionAddress" AS "collectionAddress", "order"."tokenId" AS "tokenId", "order"."type" AS "type", "order"."marketplace" AS "marketplace", "order"."price" AS "price", "order"."startingPrice" AS "startingPrice", "order"."currency" AS "currency", "order"."startTime" AS "startTime", "order"."endTime" AS "endTime", "order"."counter" AS "counter", "order"."signature" AS "signature", "order"."cancelTxHash" AS "cancelTxHash", "order"."cancelLogIdx" AS "cancelLogIdx", "order"."cancelTimestamp" AS "cancelTimestamp", "order"."royalties" AS "royalties", "order"."startingRoyalties" AS "startingRoyalties", (SELECT "order"."startTime" <= NOW() AND ("order"."endTime" > NOW() OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT 1 FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND CASE "order"."type" WHEN \'BID\' THEN COALESCE((SELECT "balance"."balance" FROM "token_balances" "balance" WHERE "balance"."currency" = "order"."currency" AND "balance"."userAddress" = "order"."userAddress" AND "balance"."balance" > 0), 0) >= "order"."price" ELSE COALESCE((SELECT "balance"."balance" FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0), 0) > 0 END FROM (SELECT 1 AS dummy_column) "dummy_table") AS "active" FROM "orders" "order"',
            ]);
            yield queryRunner.query(`CREATE MATERIALIZED VIEW "collection_rankings" AS SELECT *, "volume1h" - "volumePrevious1h" AS "volumeChange1h", "volume6h" - "volumePrevious6h" AS "volumeChange6h", "volume24h" - "volumePrevious24h" AS "volumeChange24h", "volume7d" - "volumePrevious7d" AS "volumeChange7d", "volume30d" - "volumePrevious30d" AS "volumeChange30d", "floorPrice" - "floorPrevious1h" AS "floorChange1h", "floorPrice" - "floorPrevious6h" AS "floorChange6h", "floorPrice" - "floorPrevious24h" AS "floorChange24h", "floorPrice" - "floorPrevious7d" AS "floorChange7d", "floorPrice" - "floorPrevious30d" AS "floorChange30d" FROM (SELECT "collection"."address", (SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6')) AS "volume", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - INTERVAL '1 hour'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volume1h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - INTERVAL '6 hours'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volume6h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - INTERVAL '1 day'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volume24h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - INTERVAL '7 days'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volume7d", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - INTERVAL '30 days'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volume30d", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - (INTERVAL '1 hour' * 2) AND "sale"."timestamp" <= NOW() - INTERVAL '1 hour'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volumePrevious1h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - (INTERVAL '6 hours' * 2) AND "sale"."timestamp" <= NOW() - INTERVAL '6 hours'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volumePrevious6h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - (INTERVAL '1 day' * 2) AND "sale"."timestamp" <= NOW() - INTERVAL '1 day'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volumePrevious24h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - (INTERVAL '7 days' * 2) AND "sale"."timestamp" <= NOW() - INTERVAL '7 days'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volumePrevious7d", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - (INTERVAL '30 days' * 2) AND "sale"."timestamp" <= NOW() - INTERVAL '30 days'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volumePrevious30d", (SELECT MIN(CASE WHEN "order"."type" = 'DUTCH_AUCTION' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN ('ASK', 'DUTCH_AUCTION') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "order"."active") AS "floorPrice", (SELECT MIN(CASE WHEN "order"."type" = 'DUTCH_AUCTION' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - INTERVAL '1 hour' - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN ('ASK', 'DUTCH_AUCTION') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "order"."startTime" <= NOW() - INTERVAL '1 hour' AND ("order"."endTime" > NOW() - INTERVAL '1 hour' OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT * FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND "order"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND EXISTS ((SELECT 1 FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0))) AS "floorPrevious1h", (SELECT MIN(CASE WHEN "order"."type" = 'DUTCH_AUCTION' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - INTERVAL '6 hours' - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN ('ASK', 'DUTCH_AUCTION') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "order"."startTime" <= NOW() - INTERVAL '6 hours' AND ("order"."endTime" > NOW() - INTERVAL '6 hours' OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT * FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND "order"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND EXISTS ((SELECT 1 FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0))) AS "floorPrevious6h", (SELECT MIN(CASE WHEN "order"."type" = 'DUTCH_AUCTION' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day' - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN ('ASK', 'DUTCH_AUCTION') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "order"."startTime" <= NOW() - INTERVAL '1 day' AND ("order"."endTime" > NOW() - INTERVAL '1 day' OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT * FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND "order"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND EXISTS ((SELECT 1 FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0))) AS "floorPrevious24h", (SELECT MIN(CASE WHEN "order"."type" = 'DUTCH_AUCTION' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - INTERVAL '7 days' - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN ('ASK', 'DUTCH_AUCTION') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "order"."startTime" <= NOW() - INTERVAL '7 days' AND ("order"."endTime" > NOW() - INTERVAL '7 days' OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT * FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND "order"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND EXISTS ((SELECT 1 FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0))) AS "floorPrevious7d", (SELECT MIN(CASE WHEN "order"."type" = 'DUTCH_AUCTION' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - INTERVAL '30 days' - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN ('ASK', 'DUTCH_AUCTION') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "order"."startTime" <= NOW() - INTERVAL '30 days' AND ("order"."endTime" > NOW() - INTERVAL '30 days' OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT * FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND "order"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND EXISTS ((SELECT 1 FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0))) AS "floorPrevious30d", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6')) AS "saleCount", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - INTERVAL '1 hour') AS "saleCount1h", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - INTERVAL '6 hours') AS "saleCount6h", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - INTERVAL '1 day') AS "saleCount24h", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - INTERVAL '7 days') AS "saleCount7d", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN ('0000000000000000000000000000000000000000', 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 'b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "sale"."timestamp" > NOW() - INTERVAL '30 days') AS "saleCount30d", (SELECT SUM("balance"."balance") FROM "balances" "balance" WHERE "balance"."collectionAddress" = "collection"."address" AND "balance"."balance" > 0) AS "totalSupply", (SELECT COUNT(DISTINCT "balance"."userAddress") FROM "balances" "balance" WHERE "balance"."collectionAddress" = "collection"."address" AND "balance"."balance" > 0) AS "ownerCount", (SELECT COUNT(DISTINCT "order"."tokenId") FROM "orders_view" "order" WHERE "order"."type" != 'BID' AND "order"."collectionAddress" = "collection"."address" AND "order"."active") AS "listedCount" FROM "collections" "collection") "collection"`);
            yield queryRunner.query(`INSERT INTO "typeorm_metadata"("database", "schema", "table", "type", "name", "value") VALUES (DEFAULT, $1, DEFAULT, $2, $3, $4)`, [
                'public',
                'MATERIALIZED_VIEW',
                'collection_rankings',
                'SELECT *, "volume1h" - "volumePrevious1h" AS "volumeChange1h", "volume6h" - "volumePrevious6h" AS "volumeChange6h", "volume24h" - "volumePrevious24h" AS "volumeChange24h", "volume7d" - "volumePrevious7d" AS "volumeChange7d", "volume30d" - "volumePrevious30d" AS "volumeChange30d", "floorPrice" - "floorPrevious1h" AS "floorChange1h", "floorPrice" - "floorPrevious6h" AS "floorChange6h", "floorPrice" - "floorPrevious24h" AS "floorChange24h", "floorPrice" - "floorPrevious7d" AS "floorChange7d", "floorPrice" - "floorPrevious30d" AS "floorChange30d" FROM (SELECT "collection"."address", (SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\')) AS "volume", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - INTERVAL \'1 hour\'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volume1h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - INTERVAL \'6 hours\'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volume6h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - INTERVAL \'1 day\'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volume24h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - INTERVAL \'7 days\'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volume7d", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - INTERVAL \'30 days\'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volume30d", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - (INTERVAL \'1 hour\' * 2) AND "sale"."timestamp" <= NOW() - INTERVAL \'1 hour\'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volumePrevious1h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - (INTERVAL \'6 hours\' * 2) AND "sale"."timestamp" <= NOW() - INTERVAL \'6 hours\'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volumePrevious6h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - (INTERVAL \'1 day\' * 2) AND "sale"."timestamp" <= NOW() - INTERVAL \'1 day\'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volumePrevious24h", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - (INTERVAL \'7 days\' * 2) AND "sale"."timestamp" <= NOW() - INTERVAL \'7 days\'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volumePrevious7d", (SELECT COALESCE((SELECT SUM("sale"."price") FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - (INTERVAL \'30 days\' * 2) AND "sale"."timestamp" <= NOW() - INTERVAL \'30 days\'), 0) FROM (SELECT 1 AS dummy_column) "dummy_table") AS "volumePrevious30d", (SELECT MIN(CASE WHEN "order"."type" = \'DUTCH_AUCTION\' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN (\'ASK\', \'DUTCH_AUCTION\') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "order"."active") AS "floorPrice", (SELECT MIN(CASE WHEN "order"."type" = \'DUTCH_AUCTION\' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - INTERVAL \'1 hour\' - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN (\'ASK\', \'DUTCH_AUCTION\') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "order"."startTime" <= NOW() - INTERVAL \'1 hour\' AND ("order"."endTime" > NOW() - INTERVAL \'1 hour\' OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT * FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND "order"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND EXISTS ((SELECT 1 FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0))) AS "floorPrevious1h", (SELECT MIN(CASE WHEN "order"."type" = \'DUTCH_AUCTION\' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - INTERVAL \'6 hours\' - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN (\'ASK\', \'DUTCH_AUCTION\') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "order"."startTime" <= NOW() - INTERVAL \'6 hours\' AND ("order"."endTime" > NOW() - INTERVAL \'6 hours\' OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT * FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND "order"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND EXISTS ((SELECT 1 FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0))) AS "floorPrevious6h", (SELECT MIN(CASE WHEN "order"."type" = \'DUTCH_AUCTION\' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - INTERVAL \'1 day\' - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN (\'ASK\', \'DUTCH_AUCTION\') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "order"."startTime" <= NOW() - INTERVAL \'1 day\' AND ("order"."endTime" > NOW() - INTERVAL \'1 day\' OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT * FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND "order"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND EXISTS ((SELECT 1 FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0))) AS "floorPrevious24h", (SELECT MIN(CASE WHEN "order"."type" = \'DUTCH_AUCTION\' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - INTERVAL \'7 days\' - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN (\'ASK\', \'DUTCH_AUCTION\') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "order"."startTime" <= NOW() - INTERVAL \'7 days\' AND ("order"."endTime" > NOW() - INTERVAL \'7 days\' OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT * FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND "order"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND EXISTS ((SELECT 1 FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0))) AS "floorPrevious7d", (SELECT MIN(CASE WHEN "order"."type" = \'DUTCH_AUCTION\' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - INTERVAL \'30 days\' - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END) FROM "orders_view" "order" WHERE "order"."type" IN (\'ASK\', \'DUTCH_AUCTION\') AND "order"."collectionAddress" = "collection"."address" AND "order"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "order"."startTime" <= NOW() - INTERVAL \'30 days\' AND ("order"."endTime" > NOW() - INTERVAL \'30 days\' OR "order"."endTime" IS NULL) AND "order"."cancelTimestamp" IS NULL AND NOT EXISTS (SELECT * FROM "sales" "sale" WHERE "sale"."orderHash" = "order"."hash") AND "order"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND EXISTS ((SELECT 1 FROM "balances" "balance" WHERE "balance"."userAddress" = "order"."userAddress" AND "balance"."collectionAddress" = "order"."collectionAddress" AND "balance"."tokenId" = "order"."tokenId" AND "balance"."balance" > 0))) AS "floorPrevious30d", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\')) AS "saleCount", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - INTERVAL \'1 hour\') AS "saleCount1h", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - INTERVAL \'6 hours\') AS "saleCount6h", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - INTERVAL \'1 day\') AS "saleCount24h", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - INTERVAL \'7 days\') AS "saleCount7d", (SELECT COUNT(*) FROM "sales" "sale" WHERE "sale"."collectionAddress" = "collection"."address" AND "sale"."currency" IN (\'0000000000000000000000000000000000000000\', \'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\', \'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "sale"."timestamp" > NOW() - INTERVAL \'30 days\') AS "saleCount30d", (SELECT SUM("balance"."balance") FROM "balances" "balance" WHERE "balance"."collectionAddress" = "collection"."address" AND "balance"."balance" > 0) AS "totalSupply", (SELECT COUNT(DISTINCT "balance"."userAddress") FROM "balances" "balance" WHERE "balance"."collectionAddress" = "collection"."address" AND "balance"."balance" > 0) AS "ownerCount", (SELECT COUNT(DISTINCT "order"."tokenId") FROM "orders_view" "order" WHERE "order"."type" != \'BID\' AND "order"."collectionAddress" = "collection"."address" AND "order"."active") AS "listedCount" FROM "collections" "collection") "collection"',
            ]);
            yield queryRunner.query(`CREATE VIEW "collections_view" AS SELECT "collection"."address" AS "address", "collection"."type" AS "type", "collection"."name" AS "name", "collection"."symbol" AS "symbol", "collection"."imageUrl" AS "imageUrl", "collection"."active" AS "active", "collection"."verified" AS "verified", "collection"."explicit" AS "explicit", "collection"."bannerUrl" AS "bannerUrl", "collection"."description" AS "description", "collection"."deployedAt" AS "deployedAt", "collection"."deployer" AS "deployer", "collection"."links" AS "links", "collection"."lastImport" AS "lastImport", COALESCE("ranking"."volume", 0) AS "volume", COALESCE("ranking"."volume1h", 0) AS "volume1h", COALESCE("ranking"."volume6h", 0) AS "volume6h", COALESCE("ranking"."volume24h", 0) AS "volume24h", COALESCE("ranking"."volume7d", 0) AS "volume7d", COALESCE("ranking"."volume30d", 0) AS "volume30d", COALESCE("ranking"."volumeChange1h", 0) AS "volumeChange1h", COALESCE("ranking"."volumeChange6h", 0) AS "volumeChange6h", COALESCE("ranking"."volumeChange24h", 0) AS "volumeChange24h", COALESCE("ranking"."volumeChange7d", 0) AS "volumeChange7d", COALESCE("ranking"."volumeChange30d", 0) AS "volumeChange30d", COALESCE("ranking"."floorPrice", 0) AS "floorPrice", COALESCE("ranking"."floorChange1h", 0) AS "floorChange1h", COALESCE("ranking"."floorChange6h", 0) AS "floorChange6h", COALESCE("ranking"."floorChange24h", 0) AS "floorChange24h", COALESCE("ranking"."floorChange7d", 0) AS "floorChange7d", COALESCE("ranking"."floorChange30d", 0) AS "floorChange30d", COALESCE("ranking"."saleCount", 0) AS "saleCount", COALESCE("ranking"."saleCount1h", 0) AS "saleCount1h", COALESCE("ranking"."saleCount6h", 0) AS "saleCount6h", COALESCE("ranking"."saleCount24h", 0) AS "saleCount24h", COALESCE("ranking"."saleCount7d", 0) AS "saleCount7d", COALESCE("ranking"."saleCount30d", 0) AS "saleCount30d", COALESCE("ranking"."totalSupply", 0) AS "totalSupply", COALESCE("ranking"."ownerCount", 0) AS "ownerCount", COALESCE("ranking"."listedCount", 0) AS "listedCount", (SELECT EXISTS (SELECT 1 FROM "notable_collections" "notable" WHERE "notable"."collectionAddress" = "collection"."address") FROM (SELECT 1 AS dummy_column) "dummy_table") AS "notable" FROM "collections" "collection" LEFT JOIN "collection_rankings" "ranking" ON "ranking"."address" = "collection"."address"`);
            yield queryRunner.query(`INSERT INTO "typeorm_metadata"("database", "schema", "table", "type", "name", "value") VALUES (DEFAULT, $1, DEFAULT, $2, $3, $4)`, [
                'public',
                'VIEW',
                'collections_view',
                'SELECT "collection"."address" AS "address", "collection"."type" AS "type", "collection"."name" AS "name", "collection"."symbol" AS "symbol", "collection"."imageUrl" AS "imageUrl", "collection"."active" AS "active", "collection"."verified" AS "verified", "collection"."explicit" AS "explicit", "collection"."bannerUrl" AS "bannerUrl", "collection"."description" AS "description", "collection"."deployedAt" AS "deployedAt", "collection"."deployer" AS "deployer", "collection"."links" AS "links", "collection"."lastImport" AS "lastImport", COALESCE("ranking"."volume", 0) AS "volume", COALESCE("ranking"."volume1h", 0) AS "volume1h", COALESCE("ranking"."volume6h", 0) AS "volume6h", COALESCE("ranking"."volume24h", 0) AS "volume24h", COALESCE("ranking"."volume7d", 0) AS "volume7d", COALESCE("ranking"."volume30d", 0) AS "volume30d", COALESCE("ranking"."volumeChange1h", 0) AS "volumeChange1h", COALESCE("ranking"."volumeChange6h", 0) AS "volumeChange6h", COALESCE("ranking"."volumeChange24h", 0) AS "volumeChange24h", COALESCE("ranking"."volumeChange7d", 0) AS "volumeChange7d", COALESCE("ranking"."volumeChange30d", 0) AS "volumeChange30d", COALESCE("ranking"."floorPrice", 0) AS "floorPrice", COALESCE("ranking"."floorChange1h", 0) AS "floorChange1h", COALESCE("ranking"."floorChange6h", 0) AS "floorChange6h", COALESCE("ranking"."floorChange24h", 0) AS "floorChange24h", COALESCE("ranking"."floorChange7d", 0) AS "floorChange7d", COALESCE("ranking"."floorChange30d", 0) AS "floorChange30d", COALESCE("ranking"."saleCount", 0) AS "saleCount", COALESCE("ranking"."saleCount1h", 0) AS "saleCount1h", COALESCE("ranking"."saleCount6h", 0) AS "saleCount6h", COALESCE("ranking"."saleCount24h", 0) AS "saleCount24h", COALESCE("ranking"."saleCount7d", 0) AS "saleCount7d", COALESCE("ranking"."saleCount30d", 0) AS "saleCount30d", COALESCE("ranking"."totalSupply", 0) AS "totalSupply", COALESCE("ranking"."ownerCount", 0) AS "ownerCount", COALESCE("ranking"."listedCount", 0) AS "listedCount", (SELECT EXISTS (SELECT 1 FROM "notable_collections" "notable" WHERE "notable"."collectionAddress" = "collection"."address") FROM (SELECT 1 AS dummy_column) "dummy_table") AS "notable" FROM "collections" "collection" LEFT JOIN "collection_rankings" "ranking" ON "ranking"."address" = "collection"."address"',
            ]);
            yield queryRunner.query(`CREATE VIEW "items_view" AS SELECT DISTINCT ON ("item"."collectionAddress", "item"."tokenId") "item"."collectionAddress" AS "collectionAddress", "item"."tokenId" AS "tokenId", "item"."title" AS "title", "item"."description" AS "description", "item"."tokenUri" AS "tokenUri", "item"."medias" AS "medias", "item"."rarityRanking" AS "rarityRanking", "item"."rarityScore" AS "rarityScore", "item"."lastImport" AS "lastImport", CASE WHEN "item"."rarityRanking" IS NOT NULL AND "collection"."totalSupply" > 0 THEN 10000 - "item"."rarityRanking" * 10000 / "collection"."totalSupply" ELSE NULL END AS "rarityBasisPoints", CASE WHEN "buyNow"."type" = 'DUTCH_AUCTION' THEN "buyNow"."startingPrice" - ("buyNow"."startingPrice" - "buyNow"."price") * EXTRACT(EPOCH FROM NOW() - "buyNow"."startTime") / EXTRACT(EPOCH FROM "buyNow"."endTime" - "buyNow"."startTime") ELSE "buyNow"."price" END AS "buyNowPrice", "buyNow"."startTime" AS "buyNowStartTime", "sellNow"."price" AS "sellNowPrice", "sellNow"."startTime" AS "sellNowStartTime", CASE WHEN "auction"."hash" IS NOT NULL THEN GREATEST("sellNow"."price", "auction"."price") ELSE NULL END AS "auctionPrice", "auction"."endTime" AS "auctionEndTime", "lastSale"."price" AS "lastSalePrice", "lastSale"."timestamp" AS "lastSaleTimestamp", "mint"."timestamp" AS "mintTimestamp", "lastTransfer"."timestamp" AS "lastTransferTimestamp", (SELECT COUNT(*) FROM "likes" "like" WHERE "like"."collectionAddress" = "item"."collectionAddress" AND "like"."tokenId" = "item"."tokenId") AS "likeCount" FROM "items" "item" LEFT JOIN "collection_rankings" "collection" ON "collection"."address" = "item"."collectionAddress"  LEFT JOIN (SELECT DISTINCT ON ("order"."collectionAddress", "order"."tokenId") * FROM "orders_view" "order" WHERE "order"."type" IN ('ASK', 'DUTCH_AUCTION') AND "order"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "order"."active" ORDER BY "order"."collectionAddress" ASC, "order"."tokenId" ASC, CASE WHEN "order"."type" = 'DUTCH_AUCTION' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END ASC) "buyNow" ON "buyNow"."collectionAddress" = "item"."collectionAddress" AND "buyNow"."tokenId" = "item"."tokenId"  LEFT JOIN (SELECT DISTINCT ON ("order"."collectionAddress", "order"."tokenId") * FROM "orders_view" "order" WHERE "order"."type" = 'BID' AND "order"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "order"."active" ORDER BY "order"."collectionAddress" ASC, "order"."tokenId" ASC, "order"."price" DESC) "sellNow" ON "sellNow"."collectionAddress" = "item"."collectionAddress" AND ("sellNow"."tokenId" = "item"."tokenId" OR "sellNow"."tokenId" IS NULL)  LEFT JOIN (SELECT DISTINCT ON ("order"."collectionAddress", "order"."tokenId") * FROM "orders_view" "order" WHERE "order"."type" = 'ENGLISH_AUCTION' AND "order"."currency" IN ('0000000000000000000000000000000000000000','c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2','b4fbf271143f4fbf7b91a5ded31805e42b2208d6') AND "order"."active" ORDER BY "order"."collectionAddress" ASC, "order"."tokenId" ASC, "order"."endTime" ASC) "auction" ON "auction"."collectionAddress" = "item"."collectionAddress" AND "auction"."tokenId" = "item"."tokenId"  LEFT JOIN (SELECT DISTINCT ON ("sale"."collectionAddress", "sale"."tokenId") * FROM "sales_view" "sale" ORDER BY "sale"."collectionAddress" ASC, "sale"."tokenId" ASC, "timestamp" DESC) "lastSale" ON "lastSale"."collectionAddress" = "item"."collectionAddress" AND "lastSale"."tokenId" = "item"."tokenId"  LEFT JOIN (SELECT DISTINCT ON ("transfer"."collectionAddress", "transfer"."tokenId") * FROM "transfers_view" "transfer" ORDER BY "transfer"."collectionAddress" ASC, "transfer"."tokenId" ASC, "timestamp" ASC) "mint" ON "mint"."collectionAddress" = "item"."collectionAddress" AND "mint"."tokenId" = "item"."tokenId"  LEFT JOIN (SELECT DISTINCT ON ("transfer"."collectionAddress", "transfer"."tokenId") * FROM "transfers_view" "transfer" ORDER BY "transfer"."collectionAddress" ASC, "transfer"."tokenId" ASC, "timestamp" DESC) "lastTransfer" ON "lastTransfer"."collectionAddress" = "item"."collectionAddress" AND "lastTransfer"."tokenId" = "item"."tokenId" ORDER BY "item"."collectionAddress" ASC, "item"."tokenId" ASC, "sellNow"."price" DESC`);
            yield queryRunner.query(`INSERT INTO "typeorm_metadata"("database", "schema", "table", "type", "name", "value") VALUES (DEFAULT, $1, DEFAULT, $2, $3, $4)`, [
                'public',
                'VIEW',
                'items_view',
                'SELECT DISTINCT ON ("item"."collectionAddress", "item"."tokenId") "item"."collectionAddress" AS "collectionAddress", "item"."tokenId" AS "tokenId", "item"."title" AS "title", "item"."description" AS "description", "item"."tokenUri" AS "tokenUri", "item"."medias" AS "medias", "item"."rarityRanking" AS "rarityRanking", "item"."rarityScore" AS "rarityScore", "item"."lastImport" AS "lastImport", CASE WHEN "item"."rarityRanking" IS NOT NULL AND "collection"."totalSupply" > 0 THEN 10000 - "item"."rarityRanking" * 10000 / "collection"."totalSupply" ELSE NULL END AS "rarityBasisPoints", CASE WHEN "buyNow"."type" = \'DUTCH_AUCTION\' THEN "buyNow"."startingPrice" - ("buyNow"."startingPrice" - "buyNow"."price") * EXTRACT(EPOCH FROM NOW() - "buyNow"."startTime") / EXTRACT(EPOCH FROM "buyNow"."endTime" - "buyNow"."startTime") ELSE "buyNow"."price" END AS "buyNowPrice", "buyNow"."startTime" AS "buyNowStartTime", "sellNow"."price" AS "sellNowPrice", "sellNow"."startTime" AS "sellNowStartTime", CASE WHEN "auction"."hash" IS NOT NULL THEN GREATEST("sellNow"."price", "auction"."price") ELSE NULL END AS "auctionPrice", "auction"."endTime" AS "auctionEndTime", "lastSale"."price" AS "lastSalePrice", "lastSale"."timestamp" AS "lastSaleTimestamp", "mint"."timestamp" AS "mintTimestamp", "lastTransfer"."timestamp" AS "lastTransferTimestamp", (SELECT COUNT(*) FROM "likes" "like" WHERE "like"."collectionAddress" = "item"."collectionAddress" AND "like"."tokenId" = "item"."tokenId") AS "likeCount" FROM "items" "item" LEFT JOIN "collection_rankings" "collection" ON "collection"."address" = "item"."collectionAddress"  LEFT JOIN (SELECT DISTINCT ON ("order"."collectionAddress", "order"."tokenId") * FROM "orders_view" "order" WHERE "order"."type" IN (\'ASK\', \'DUTCH_AUCTION\') AND "order"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "order"."active" ORDER BY "order"."collectionAddress" ASC, "order"."tokenId" ASC, CASE WHEN "order"."type" = \'DUTCH_AUCTION\' THEN "order"."startingPrice" - ("order"."startingPrice" - "order"."price") * EXTRACT(EPOCH FROM NOW() - "order"."startTime") / EXTRACT(EPOCH FROM "order"."endTime" - "order"."startTime") ELSE "order"."price" END ASC) "buyNow" ON "buyNow"."collectionAddress" = "item"."collectionAddress" AND "buyNow"."tokenId" = "item"."tokenId"  LEFT JOIN (SELECT DISTINCT ON ("order"."collectionAddress", "order"."tokenId") * FROM "orders_view" "order" WHERE "order"."type" = \'BID\' AND "order"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "order"."active" ORDER BY "order"."collectionAddress" ASC, "order"."tokenId" ASC, "order"."price" DESC) "sellNow" ON "sellNow"."collectionAddress" = "item"."collectionAddress" AND ("sellNow"."tokenId" = "item"."tokenId" OR "sellNow"."tokenId" IS NULL)  LEFT JOIN (SELECT DISTINCT ON ("order"."collectionAddress", "order"."tokenId") * FROM "orders_view" "order" WHERE "order"."type" = \'ENGLISH_AUCTION\' AND "order"."currency" IN (\'0000000000000000000000000000000000000000\',\'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\',\'b4fbf271143f4fbf7b91a5ded31805e42b2208d6\') AND "order"."active" ORDER BY "order"."collectionAddress" ASC, "order"."tokenId" ASC, "order"."endTime" ASC) "auction" ON "auction"."collectionAddress" = "item"."collectionAddress" AND "auction"."tokenId" = "item"."tokenId"  LEFT JOIN (SELECT DISTINCT ON ("sale"."collectionAddress", "sale"."tokenId") * FROM "sales_view" "sale" ORDER BY "sale"."collectionAddress" ASC, "sale"."tokenId" ASC, "timestamp" DESC) "lastSale" ON "lastSale"."collectionAddress" = "item"."collectionAddress" AND "lastSale"."tokenId" = "item"."tokenId"  LEFT JOIN (SELECT DISTINCT ON ("transfer"."collectionAddress", "transfer"."tokenId") * FROM "transfers_view" "transfer" ORDER BY "transfer"."collectionAddress" ASC, "transfer"."tokenId" ASC, "timestamp" ASC) "mint" ON "mint"."collectionAddress" = "item"."collectionAddress" AND "mint"."tokenId" = "item"."tokenId"  LEFT JOIN (SELECT DISTINCT ON ("transfer"."collectionAddress", "transfer"."tokenId") * FROM "transfers_view" "transfer" ORDER BY "transfer"."collectionAddress" ASC, "transfer"."tokenId" ASC, "timestamp" DESC) "lastTransfer" ON "lastTransfer"."collectionAddress" = "item"."collectionAddress" AND "lastTransfer"."tokenId" = "item"."tokenId" ORDER BY "item"."collectionAddress" ASC, "item"."tokenId" ASC, "sellNow"."price" DESC',
            ]);
        });
    }
}
exports.ActiveOrdersCache1699016279498 = ActiveOrdersCache1699016279498;
//# sourceMappingURL=1699016279498-activeOrdersCache.js.map